#	職業スクリプト
#	2025/04/12 skript 2.10.2に対応（エイリアスの追加、「on rightclick」の記載方法の変更）


# ◇■◇別名一覧◇■◇
aliases:

	#各種のテラコッタ
	any terracotta = terracotta , white_terracotta , orange_terracotta , magenta_terracotta , light_blue_terracotta , yellow_terracotta , lime_terracotta , pink_terracotta , gray_terracotta , light_gray_terracotta , cyan_terracotta , purple_terracotta , blue_terracotta , brown_terracotta , green_terracotta , red_terracotta , black_terracotta
	# 各種のコンクリート
	any concrete = white_concrete , orange_concrete , magenta_concrete , light_blue_concrete , yellow_concrete , lime_concrete , pink_concrete , gray_concrete , light_gray_concrete , cyan_concrete , purple_concrete , blue_concrete , brown_concrete , green_concrete , red_concrete , black_concrete
	# 各種の葉
	leaves = oak_leaves , spruce_leaves , birch_leaves , jungle_leaves , acacia_leaves , dark_oak_leaves , azalea_leaves , flowering_azalea_leaves , mangrove_leaves , cherry_leaves , nether_wart_block , warped_wart_block
	#各種の原木、幹
	any log = oak_log , spruce_log , birch_log , jungle_log , acacia_log , dark_oak_log , crimson_stem , warped_stem , mangrove_log , cherry_log, pale_oak_log
	# 各種のツルハシ
	any pickaxe = wooden_pickaxe , stone_pickaxe , iron_pickaxe , diamond_pickaxe , golden_pickaxe , netherite_pickaxe
	# 各種のシャベル
	any shovel = wooden_shovel , stone_shovel , iron_shovel , diamond_shovel , golden_shovel , netherite_shovel
	# 各種の斧
	any axe = wooden_axe , stone_axe , iron_axe , diamond_axe , golden_axe , netherite_axe
	# 各種のクワ
	any hoe = wooden_hoe , stone_hoe , iron_hoe , diamond_hoe , golden_hoe , netherite_hoe


	# 土工のシャベル特効ブロック 粘土、粗い土、耕地、草ブロック・土、砂利、菌糸、ポドゾル、赤い砂、砂、ソウルサンド、草の道、雪ブロック
	digdig     = clay, coarse dirt, farmland, grass block, dirt, gravel, mycelium, podzol, red sand, sand, soul sand, dirt path, snow block
	# 土工のつるはし特効ブロック 赤い砂岩，砂岩
	digdigpick = red sandstone, sandstone
	# 坑夫の特効ブロック 石、丸石、安山岩、閃緑岩、花崗岩、黒曜石、ネザーラック、深層岩，方解石，ブラックストーン
	minemine   = stone, cobblestone, andesite, diorite, granite, obsidian, magma block, netherrack, deepslate, cobbled deepslate, calcite, blackstone
	# 左官の特効ブロック 各種のテラコッタ，各種のコンクリート
	plastplast = any terracotta, any concrete
	# 樵夫の特効ブロック 各種の原木
	cutcut = any log, stripped crimson stem, stripped warped stem



# ◇■◇オプション◇■◇
options:
	# 労働局の名称
	guild display name : "&7[&aArbeitsamt&7]&r"
	# 1日ごとに補充される利権数
	# 2025/04/12から当面の間、5000から10000に変更している。あとで戻すこと ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !
	job rights on day: 10000
	# 蓄積される利権数の最大値
	max job rights: 100000
	# 利権を1回行使するごとに消費される利権数（職種別）
	per job rights lumberjack: 100
	per job rights earthwork: 50
	per job rights miner: 50
	per job rights plasterwork: 50
	# 特殊な取引時にかかる利権値
	per rights on marchant powder to concrete: 250		# ①コンクリートの簡易生成
	per rights on manufacture weapon: 5000						# ③工匠による仕事道具（武器系統）の生産
	# 遡って給付が行われる最大日数
	days max G : 100000


# ◇■◇変数の初期値◇■◇
# ・各プレイヤーの初回ログイン時に設定する。variablesは使用しない（うまくいかない）。
on first join:
	set {guild::lastJobChangeDay::%the player's uuid%} to 0		# 前回に仕事を変更した日
	set {guild::jobRights::%the player's uuid%} to 50000			# 保有利権値
	set {guild::job::%the player's uuid%} to "unemployed"			# 職業
	set {guild::openedMerchantType::%the player's uuid%} to ""		# 現在開いている交易ウィンドウのタイプ










################################################################################
# コマンドの動作・GUI
################################################################################

# ◇■◇コマンド◇■◇
command /guild <string=wizard> [<string=null> [<string=null> <string=null>]]:
	aliases: /job
	trigger:
		set {_order} to arg-1
		# 第1引数"wizard"→ジョブ・利権関連の対話型プログラムを始動◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆
		if {_order} is "wizard":
			set {_action} to arg-2
			# 第2引数"null"→ウィザードの最初のメッセージ
			if {_action} is "null":
				# 1行目
				message "%{@guild display name}% こちら職業安定所です。ご用件をお選びください。" to the player
				# 2行目				
				add a new text component from " &7> " to {_m::*}
				set {_c} to a new text component from "&b&n転職したい&r"
				set click event of {_c} to a new click event to run command "/guild wizard change"
				add {_c} to {_m::*}
				add a new text component from " " to {_m::*}	# ただの空白
				set {_c} to a new text component from "&b&n説明を聞きたい&r"
				set click event of {_c} to a new click event to run command "/guild wizard help"
				add {_c} to {_m::*}
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				# 3行目
				add a new text component from " &7> &r簡易クラフト・交易（ " to {_m::*}
				set {_c} to a new text component from "&b&nコンクリート&r"
				set click event of {_c} to a new click event to run command "/guild trade powderToConcrete"
				set hover event of {_c} to a new hover event showing "各種コンクリートパウダーをコンクリートへ一括変換する簡易クラフト画面を開きます%nl%（左官専用機能）"
				add {_c} to {_m::*}
				#add a new text component from " " to {_m::*}	# ただの空白
				#set {_c} to a new text component from "&b&n土系ブロック&r"
				#set click event of {_c} to a new click event to run command "/guild trade dirtTodirt"
				#set hover event of {_c} to a new hover event showing "一定の比率で，外国と土系ブロックを交換する交易画面を開きます%nl%（職業・場所によってレートが異なります）"
				#add {_c} to {_m::*}
				#add a new text component from " " to {_m::*}	# ただの空白
				#set {_c} to a new text component from "&b&n石系ブロック&r"
				#set click event of {_c} to a new click event to run command "/guild trade stoneToStone"
				#set hover event of {_c} to a new hover event showing "一定の比率で，外国と石系ブロックを交換する交易画面を開きます%nl%（職業・場所によってレートが異なります）"
				#add {_c} to {_m::*}
				#add to a new text component from " ）" to {_m::*}
				set {_c} to a new text component from " ）"
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				# OP権限者はさらにコマンドが表示される
				if the player is op:
					# op1行目
					add a new text component from " &7> &r値の変更（"  to {_m::*}
					set {_c} to a new text component from "&7&n最終転職日&r"
					set click event of {_c} to a new click event to suggest command "/guild set day"
					set hover event of {_c} to a new hover event showing "指定プレイヤーの最終転職日を変更します。%nl%クリックして表示されるコマンドに続いて，対象者のIDと設定したい最終転職日を入力してください。"
					add {_c} to {_m::*}
					add a new text component from " " to {_m::*}	# ただの空白
					set {_c} to a new text component from "&7&n利権値&r"
					set click event of {_c} to a new click event to suggest command "/guild set rights"
					set hover event of {_c} to a new hover event showing "指定プレイヤーの利権値を変更します。%nl%クリックして表示されるコマンドに続いて，対象者のIDと設定したい利権値を入力してください。"
					add {_c} to {_m::*}
					add a new text component from " " to {_m::*}	# ただの空白
					set {_c} to a new text component from "&7&n職業&r"
					set click event of {_c} to a new click event to suggest command "/guild set rights"
					set hover event of {_c} to a new hover event showing "指定プレイヤーの職業を変更します。%nl%クリックして表示されるコマンドに続いて，対象者のIDと設定したい職業IDを入力してください。"
					add {_c} to {_m::*}
					add a new text component from " ） &r 値の加算（" to {_m::*}
					set {_c} to a new text component from "&7&n利権値&r"
					set click event of {_c} to a new click event to suggest command "/guild add rights"
					set hover event of {_c} to a new hover event showing "指定プレイヤーの利権値を加算します。%nl%クリックして表示されるコマンドに続いて，対象者のIDと加算したい利権値を入力してください。"
					add {_c} to {_m::*}
					add a new text component from " ）" to {_m::*}
					set {_l} to merge components {_m::*}
					send component {_l} to the player
					delete {_m::*}
					# op2行目
					add a new text component from " &7> " to {_m::*}
					set {_c} to a new text component from "&7&n統計&r"
					set click event of {_c} to a new click event to run command "/guild statistics"
					add {_c} to {_m::*}
					add a new text component from " " to {_m::*}	# ただの空白
					set {_c} to a new text component from "&7&n入植者情報&r"
					set click event of {_c} to a new click event to suggest command "/guild status"
					set hover event of {_c} to a new hover event showing "指定プレイヤーの情報を閲覧します。%nl%クリックして表示されるコマンドに続いて，対象者のIDを入力してください。"
					add {_c} to {_m::*}
					set {_l} to merge components {_m::*}
					send component {_l} to the player
					delete {_m::*}
				# コマンド入力者の現在の利権値を表示してあげる
				addRights(player, 0)
				stop
			# 第2引数"null"→転職ウィザードの表示
			else if {_action} is "change":
				# 1行目
				message "%{@guild display name}% 転職をご希望ですね。新しい職種を選んで下さい。" to the player
				message "%{@guild display name}% 現在の%player%の職業は %jobToJp({guild::job::%player's uuid%})% です。" to the player # 2025/3/16 ぎまっち追加 転職前に現在の職業を表示
				# 2行目
				add a new text component from " &7> " to {_m::*}
				set {_c} to a new text component from "&a&n樵夫&r"
				set click event of {_c} to a new click event to run command "/guild change lumberjack"
				set hover event of {_c} to a new hover event showing "森林伐採に有利な樵夫に転職できます。"
				add {_c} to {_m::*}
				add a new text component from " " to {_m::*}	# ただの空白
				set {_c} to a new text component from "&e&n工匠&r"
				set click event of {_c} to a new click event to run command "/guild change craftsman"
				set hover event of {_c} to a new hover event showing "ツール生産に有利な工匠に転職できます。"
				add {_c} to {_m::*}
				add a new text component from " " to {_m::*}	# ただの空白
				set {_c} to a new text component from "&9&n坑夫&r"
				set click event of {_c} to a new click event to run command "/guild change miner"
				set hover event of {_c} to a new hover event showing "土砂採掘に有利な坑夫に転職できます。"
				add {_c} to {_m::*}
				add a new text component from " " to {_m::*}	# ただの空白
				set {_c} to a new text component from "&b&n左官&r"
				set click event of {_c} to a new click event to run command "/guild change plasterwork"
				set hover event of {_c} to a new hover event showing "高級建材生産に有利な左官に転職できます。"
				add {_c} to {_m::*}
				add a new text component from " " to {_m::*}	# ただの空白
				set {_c} to a new text component from "&7&n無職&r"
				set click event of {_c} to a new click event to run command "/guild change"
				set hover event of {_c} to a new hover event showing "無職になります。特にいいことはありません。"
				add {_c} to {_m::*}
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				stop
			# 第2引数"help"→ヘルプウィザードの表示
			else if {_action} is "help":
				# 1行目
				message "%{@guild display name}% 職業や利権について，何をお知りになりたいですか。" to the player
				message "%{@guild display name}% 現在の%player%の職業は %jobToJp({guild::job::%player's uuid%})% です。" to the player # 2025/3/16 ぎまっち追加 転職前に現在の職業を表示
				# 2行目
				add a new text component from " &7> " to {_m::*}
				set {_c} to a new text component from "&b&n職業・利権システムの概要を知りたい&r"
				set click event of {_c} to a new click event to run command "/guild help"
				add {_c} to {_m::*}
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				# 3行目
				add a new text component from " &7> " to {_m::*}
				set {_m::2} to a new text component from "&b&n樵夫という職業について知りたい&r"
				set click event of {_m::2} to a new click event to run command "/guild help lumberjack"
				add {_c} to {_m::*}
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				# 4行目
				add a new text component from " &7> " to {_m::*}
				set {_m::2} to a new text component from "&b&n工匠という職業について知りたい&r"
				set click event of {_m::2} to a new click event to run command "/guild help craftsman"
				add {_c} to {_m::*}
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				# 5行目
				add a new text component from " &7> " to {_m::*}
				set {_m::2} to a new text component from "&b&n坑夫という職業について知りたい&r"
				set click event of {_m::2} to a new click event to run command "/guild help miner"
				add {_c} to {_m::*}
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				# 6行目
				add a new text component from " &7> " to {_m::*}
				set {_m::2} to a new text component from "&b&n左官という職業について知りたい&r"
				set click event of {_m::2} to a new click event to run command "/guild help plasterwork"
				add {_c} to {_m::*}
				set {_l} to merge components {_m::*}
				send component {_l} to the player
				delete {_m::*}
				stop
		# 第1引数"change"→職を変更◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇
		else if {_order} is "change":
			setJobMyself(player, arg-2)
			exit
		# 第1引数"help"→ヘルプを表示◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆
		else if {_order} is "help":
			set {_job} to arg-2
			if {_job} is "lumberjack":
				message "%{@guild display name}% 職業「樵夫」についてご説明します。" to the player
				message " &8・&r 当職に就くと，いわゆる「CutAll」を使用できます。" to the player
				message "  斧で原木を破壊することで，1本の木をまるごと伐採できます。" to the player
				set {_pjrl} to {@per job rights lumberjack}
				message " &8・&r CutAll機能を利用するごとに，利権値が &c%{_pjrl}%&r 消費されます。" to the player
			else if {_job} is "craftsman":
				message "%{@guild display name}% 職業「工匠」についてご説明します。" to the player
				message " &8・&r （stub）。" to the player
				set {_pjre} to {@per job rights earthwork}
				message " &8・&r 利権を利用するごとに，利権値が &c%{_pjre}%&r 消費されます。" to the player
			else if {_job} is "miner":
				message "%{@guild display name}% 職業「坑夫」についてご説明します。" to the player
				message " &8・&r 当職に就くと，ツルハシで採集できる石材採集量がx4になります。" to the player
				set {_pjrm} to {@per job rights miner}
				message " &8・&r 利権を利用するごとに，利権値が &c%{_pjrm}%&r 消費されます。" to the player
			else if {_job} is "plasterwork":
				message "%{@guild display name}% 職業「左官」についてご説明します。" to the player
				message " &8・&r 当職に就くと，ツルハシで採集できるテラコッタとコンクリートがx3になります。" to the player
				set {_pjrp} to {@per job rights plasterwork}
				message " &8・&r 利権を利用するごとに，利権値が &c%{_pjrp}%&r 消費されます。" to the player
			else:
				message "%{@guild display name}% 職業システムについてご説明します。" to the player
				message " &8・&r 当システムは，資源採集の高速化を実現するものです。" to the player
				message " &8・&r 職業は「樵夫&7（lumberjack）&r」，「工匠&7（craftsman）&r」" to the player
				message "  「坑夫&7（miner）&r」「左官&7（plasterwork）&r」の4つがございます。" to the player
				message "  詳しくはコマンド &l/guild help <職業ID>&r をご入力ください。" to the player
				message " &8・&r 建材採集時に発動する特殊技を &l&b利権&r と称します。" to the player
				message "  利権を利用すると，一定の &l&b利権値&r を消費します。" to the player
				set {_jrd} to {@job rights on day}
				set {_mjr} to {@max job rights}
				message "  利権は日ごとに &a%{_jrd}%&r ずつ補充され，最大 &a%{_mjr}%&r まで貯まります。" to the player
				message "  現在のあなたの利権値は &a%{guild::jobRights::%the player's uuid%}%&r です。" to the player
				message " &8・&r 転職には，コマンド &l/guild change <職業ID>&r を入力します。" to the player
				message "  一度転職したあとは，&430日間は転職ができません&rのでご注意ください。" to the player
				# ▼日数差計算
				set {_today} to floor(unix timestamp of now / 86400)	# 本日を求める
				if {guild::lastJobChangeDay::%the player's uuid%} is not set:				# もし，ジョブチェンジ日の記録がなかった場合は，本日の日付を記録する。
					set {guild::lastJobChangeDay::%the player's uuid%} to 0
				set {_diff} to {_today} - {guild::lastJobChangeDay::%the player's uuid%}	# 最終ジョブチェンジ日と本日との日数差を求める
				# ▲
				message "  &7（前回あなたが転職してから &a%{_diff}%日&7 が経過しています）" to the player
			# ここから下は，どんなヘルプでも必ず最後に表示する
			set {_m::1} to a new text component from "%{@guild display name}% 他にご質問はございますか？ "
			set {_m::2} to a new text component from "&b&n質問したい&r"
			set click event of {_m::2} to a new click event to run command "/guild wizard help"
			set {_m::3} to a new text component from " "
			set {_m::4} to a new text component from "&b&nとくにない&r"
			set click event of {_m::4} to a new click event to run command "/guild wizard"
			set {_l} to merge components {_m::*}
			send component {_l} to the player
			delete {_m::*}
		# 第1引数"trade"→各種の交易画面を開く◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◆◇◆◇◆◇◆◇◆◇◆
		else if {_order} is "trade":
			set {_type} to arg-2
			showTrade({_type}, player)
		# 第1引数"set"→さまざまな値をセット(OP専用)◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◆◇◆◇◆◇◆◇
		else if {_order} is "set":
			# 条件チェック
			player is op
			# 本処理
			set {_v} to arg-2	# 変更したい変数の名前。「day」「rights（利権値）」「job（職業）」のみ許可される。
			set {_p} to arg-3 parsed as offlineplayers	# 変更されるプレイヤーのID
			# 前回に仕事を変更した日を変更
			if {_v} is "day":
				set {_a} to arg-4 parsed as number
				if {_p} is "all":
					loop all offlineplayers:
						setLastJobChangeDay(loop-value, {_a})
					message "%{@guild display name}% 全員の最終転職日を %{_r}% に設定しました。" to the player
				else:
					set {_r} to setLastJobChangeDay({_p}, {_a})
					message "%{@guild display name}% %{_p}%の最終転職日を %{_r}% に設定しました。" to the player
			# 利権値を変更
			else if {_v} is "rights":
				set {_a} to arg-4 parsed as number
				if {_p} is "all":
					loop all offlineplayers:
						set {_r} to setRights(loop-value, {_a})
					message "%{@guild display name}% 全員の利権値を %{_r}% に設定しました。" to the player
				else:
					set {_r} to setRights({_p}, {_a})
					message "%{@guild display name}% %{_p}%の利権値を %{_r}% に設定しました。" to the player
			# 職業を変更
			else if {_v} is "job":
				set {_a} to arg-4
				set {_r} to setJob({_p}, {_a})
				message "%{@guild display name}% %{_p}%の職業を %jobToJp({_r})% に設定しました。" to the player
			# 無効な指示
			else:
				message "%{@guild display name}% 変更したい値の指定が無効です。" to the player
		# 第1引数"add"→さまざまな値を加算(OP専用)◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◆◇◆◇◆◇◆◇◆
		else if {_order} is "add":
			# 条件チェック
			player is op
			# 本処理
			set {_v} to arg-2	# 変更したい変数の名前。「day」「rights（利権値）」「job（職業）」のみ許可される。
			set {_p} to arg-3 parsed as offlineplayers	# 変更されるプレイヤーのID
			# 利権値を加算
			if {_v} is "rights":
				set {_a} to arg-4 parsed as number
				if {_p} is "all":
					loop all offlineplayers:
						addRightsOnBackground(loop-value, {_a})
					message "%{@guild display name}% 全員の利権値に %{_a}% を加算しました。" to the player
				else:
					set {_r} to addRightsOnBackground({_p}, {_a})
					message "%{@guild display name}% %{_p}%の利権値に %{_a}% を加算して %{_r}% になりました。" to the player
		# 第1引数"statistics"→統計を見る(OP専用)◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◆◇◆◇◆◇◆◇◆◇
		else if {_order} is "statistics":
			# 条件チェック
			player is op
			# 本処理
			message "%{@guild display name}% 統計を表示します。" to the player
			# {guild::job::*}を回して，
			setJobStatistics()
			message " &7>&r アクティブ入植者数 %{jobActive::all}% 名" to the player
			message " &7>&r ・うち樵夫 %{jobActive::lumberjack}% 名（%round({jobRatio::lumberjack}*100)%％）" to the player
			message " &7>&r ・うち工匠 %{jobActive::craftsman}% 名（%round({jobRatio::craftsman}*100)%％）" to the player
			message " &7>&r ・うち坑夫 %{jobActive::miner}% 名（%round({jobRatio::miner}*100)%％）" to the player
			message " &7>&r ・うち左官 %{jobActive::plasterwork}% 名（%round({jobRatio::plasterwork}*100)%％）" to the player
			message " &7>&r ・うち無職 %{jobActive::unemployed}% 名（%round({jobRatio::unemployed}*100)%％）" to the player
		# 第1引数"status"→プレイヤーの情報を見る(OP専用)◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◆◇◆◇◆◇◆
		else if {_order} is "status":
			# 条件チェック
			player is op
			set {_p} to arg-2 parsed as offlineplayer
			getJobStatus({_p}, player)











################################################################################
# 就職・転職の処理
################################################################################

# 【関数】プレイヤー自身での職を変更する
# （引数）プレイヤー（オフラインでも可），変更したい仕事
function setJobMyself(p: offlineplayer, job: text):
	set {_pid} to {_p}'s uuid
	set {_isChange} to false			# ▼前回の転職から30日経っていない場合は，キャンセル
	set {_today} to floor(unix timestamp of now / 86400)	# 本日を求める
	# もし，ジョブチェンジ日の記録がなかった場合は，本日の日付を記録する。
	if {guild::lastJobChangeDay::%{_pid}%} is not set:
		set {guild::lastJobChangeDay::%{_pid}%} to 0
	# 最終ジョブチェンジ日と本日との日数差を求め，最終ジョブチェンジ日から30日経っていない場合，警告を出して終了
	set {_diff} to {_today} - {guild::lastJobChangeDay::%{_pid}%}
	if {_diff} < 30:
		message "%{@guild display name}% &4転職は，前回の転職から30日以上が経過する必要があります&r。" to {_p}
		exit
	# 即時に仕事を変更して，ログを表示
	set {_r} to setJob({_p}, {_job})
	message "%{@guild display name}% あなたの職業を %jobToJp({_r})% に設定しました。" to {_p}
	# 本日の日付を記録する。
	set {guild::lastJobChangeDay::%{_pid}%} to {_today}



# 【関数】職業を即時に変更する
# （詳細）職業が変更されると，自動的にパーミッション周りも変更される
# （引数）職業を変更するプレイヤー，変更したい職業をIDで指定
# （返値）変更された職業の値
# （注意）無効な値を指定すると，無職を設定して返す
function setJob(p: offlineplayer, job: text):: text:
	set {_pid} to {_p}'s uuid
	# 樵夫への転職処理
	if {_job} is "lumberjack":
		set {guild::job::%{_pid}%} to "lumberjack"
		set {_r} to "lumberjack"
	# 工匠への転職処理
	else if {_job} is "craftsman":
		set {guild::job::%{_pid}%} to "craftsman"
		set {_r} to "craftsman"
	# 坑夫への転職処理
	else if {_job} is "miner":
		set {guild::job::%{_pid}%} to "miner"
		set {_r} to "miner"
	# 左官への転職処理
	else if {_job} is "plasterwork":
		set {guild::job::%{_pid}%} to "plasterwork"
		set {_r} to "plasterwork"
	# 失職処理
	else:
		set {guild::job::%{_pid}%} to "unemployed"
		set {_r} to "unemployed"
	return {_r}



# ◇■◇あるプレイヤーの職業利権に関する情報を得る◇■◇
# 《引数》情報を引き出したいプレイヤーのID
# 《返り値》なし
function getJobStatus(p: offlineplayer, s: player):
	set {_today} to floor(unix timestamp of now / 86400)				# 本日（1970/1/1＝0とする）
	set {_uuid} to {_p}'s uuid											# プレイヤーのUUID
	set {_lastLogIn} to {_today} - {guild::lastLogInDay::%{_uuid}%}			# プレイヤーが何日前にログインしたか
	set {_lastChange} to {_today} - {guild::lastJobChangeDay::%{_uuid}%}		# プレイヤーが何日前に転職したか
	# ログインが30日以上遠ざかっているときは「非アクティブアカウント」とする
	if {_lastLogIn} <= 30:
		set {_active} to true
		set {_activeJ} to "アクティブ"
	else:
		set {_active} to false
		set {_activeJ} to "非アクティブ"
	set {_name} to {_p}							# プレイヤーのID名
	set {_job} to {guild::job::%{_uuid}%}						# プレイヤーの職業
	set {_rights} to {guild::jobRights::%{_uuid}%}				# プレイヤーの保持利権値
	set {_valid} to {《v3からは使わないゾ》::%{_uuid}%}				# プレイヤーの利権使用スイッチ
	# 返り値にデータを放り込んでいく
	message "%{@guild display name}% %{_name}%（%{_activeJ}%）..." to {_s}
	message " &7>&r &n職業&r:%{_job}% &n保持利権値&r:%{_rights}% &nログイン&r:%{_lastLogIn}%日前 &n転職&r:%{_lastChange}%日前 &n利権スイッチ&r:%{_valid}%" to {_s}





# ◇■◇仕事・利権に関する統計を更新する◇■◇
# 《引数》なし
# 《返り値》なし
function setJobStatistics():
	# 返り値の準備
	set {jobActive::all} to 0				# アクティブなアカウント数
	set {jobActive::lumberjack} to 0		# アクティブな樵夫の数
	set {jobActive::earthwork} to 0			# アクティブな土工の数
	set {jobActive::miner} to 0				# アクティブな坑夫の数
	set {jobActive::plasterwork} to 0		# アクティブな左官の数
	set {jobActive::unemployed} to 0		# アクティブな無職の数
	# すべてのプレイヤーを回す
	loop all offlineplayers:
		continue if loop-value is banned	# BANされた人は統計情報に含めない
		transPlayerJobData(loop-value)		# 旧データを新データに移行
		set {_today} to floor(unix timestamp of now / 86400)				# 本日（1970/1/1＝0とする）
		set {_uuid} to loop-value's uuid									# プレイヤーのUUID
		set {_lastLogIn} to {_today} - {guild::lastLogInDay::%{_uuid}%}			# プレイヤーが何日前にログインしたか
		#set {_lastChange} to {_today} - {guild::lastJobChangeDay::%{_uuid}%}		# プレイヤーが何日前に転職したか
		# ログインが30日以上遠ざかっているときは「非アクティブアカウント」とする
		if {_lastLogIn} <= 30:
			set {_active} to true
			set {_activeJ} to "アクティブ"
		else:
			set {_active} to false
			set {_activeJ} to "非アクティブ"
		continue if {_active} is false		# 非アクティブユーザーは統計から外す
		set {_name} to loop-value							# プレイヤーのID名
		#set {_dName} to loop-value's display name			# プレイヤーの表示名
		set {_job} to {guild::job::%{_uuid}%}						# プレイヤーの職業
		#set {_rights} to {guild::jobRights::%{_uuid}%}			# プレイヤーの保持利権値
		#set {_valid} to {《v3からは使わないゾ》::%{_uuid}%}				# プレイヤーの利権使用スイッチ
		# 返り値にデータを放り込んでいく
		add 1 to {jobActive::all}		# アクティブなアカウント数を1加算
		if {_job} is "lumberjack":			# 樵夫ならば，その数を増やし，IDリストに追加
			add 1 to {jobActive::lumberjack}
			add {_name} to {_jl::*}
		if {_job} is "earthwork":			# 土工ならば，その数を増やし，IDリストに追加
			add 1 to {jobActive::earthwork}
			add {_name} to {je::*}
		if {_job} is "miner":				# 坑夫ならば，その数を増やし，IDリストに追加
			add 1 to {jobActive::miner}
			add {_name} to {jm::*}
		if {_job} is "plasterwork":			# 左官ならば，その数を増やし，IDリストに追加
			add 1 to {jobActive::plasterwork}
			add {_name} to {jp::*}
		if {_job} is "unemployed":			# 無職ならば，その数を増やし，IDリストに追加
			add 1 to {jobActive::unemployed}
			add {_name} to {ju::*}
		# broadcast "%{@guild display name}% %{_name}%（%{_activeJ}%）..."
		# broadcast " &7>&r &n職業&r:%{_job}% &n保持利権値&r:%{_rights}% &nログイン&r:%{_lastLogIn}%日前 &n転職&r:%{_lastChange}%日前 &n利権スイッチ&r:%{_valid}%"
	set {jobMember::lumberjack::*} to {_jl::*}
	set {jobMember::earthwork::*} to {_je::*}
	set {jobMember::miner::*} to {_jm::*}
	set {jobMember::plasterwork::*} to {_jp::*}
	set {jobMember::unemployed::*} to {_ju::*}
	set {jobRatio::lumberjack} to {jobActive::lumberjack} / {jobActive::all}
	set {jobRatio::earthwork} to {jobActive::earthwork} / {jobActive::all}
	set {jobRatio::miner} to {jobActive::miner} / {jobActive::all}
	set {jobRatio::plasterwork} to {jobActive::plasterwork} / {jobActive::all}
	set {jobRatio::unemployed} to {jobActive::unemployed} / {jobActive::all}














# ◇■◇職業ごとの利権を設定（樵夫以外）◇■◇

# 土工がショベルで対象ブロックを掘った場合
on break of digdig:
	# 条件チェック
	the player's gamemode is survival
	the player has permission "sakuraft.earthwork"
	the player's tool is any shovel
	{guild::jobRights::%the player's uuid%} >= {@per job rights earthwork}
	{《v3からは使わないゾ》::%the player's uuid%} = true
	# 本処理
	#set {_x1} to (rounded down (x-loc of event-location / 16)) * 16
	#set {_x2} to {_x1} + 15
	#set {_y}  to rounded down (y-loc of event-location)
	#set {_z1} to (rounded down (z-loc of event-location / 16)) * 16
	#set {_z2} to {_z1} + 15
	#message "(%{_x1}% - %{_x2}%), %{_y}%, (%{_z1}% - %{_z2}%)" to the player
	#loop blocks within location({_x1},{_y},{_z1}) and location({_x2},{_y},{_z2}):
	#	if past event-block's blockdata = loop-block's blockdata:
	#		set {_up} to the block 1 meter above the loop-block
	#		message {_up}'s blockdata
	#		if "%{_up}'s blockdata%" = "minecraft:air":
	# 旧処理
	drop 3 of (the drops of event-block)							# 合わせて通常の4倍量ドロップ
	addRights(player, -1 * {@per job rights earthwork})
	#remove {@per job rights earthwork} from {guild::jobRights::%the player's uuid%}	# 利権を削る
	#send action bar "&l利権残り&r &a%{guild::jobRights::%the player's uuid%}%&r / 1000" to player


# 土工がつるはしで対象ブロックを掘った場合
on break of digdigpick:
	# 条件チェック
	the player's gamemode is survival
	the player has permission "sakuraft.earthwork"
	the player's tool is any pickaxe
	{guild::jobRights::%the player's uuid%} >= {@per job rights earthwork}
	{《v3からは使わないゾ》::%the player's uuid%} = true
	# 本処理
	drop 3 of (the drops of event-block)							# 合わせて通常の4倍量ドロップ
	addRights(player, -1 * {@per job rights earthwork})
	#remove {@per job rights earthwork} from {guild::jobRights::%the player's uuid%}	# 利権を削る
	#send action bar "&l利権残り&r &a%{guild::jobRights::%the player's uuid%}%&r / 1000" to player


# 坑夫がショベルで対象ブロックを掘った場合（25/06/11関数化）
on break of minemine:
#	# 条件チェック
#	the player's gamemode is survival
#	the player has permission "sakuraft.miner"
#	the player's tool is any pickaxe
#	{guild::jobRights::%the player's uuid%} >= {@per job rights miner}
#	{《v3からは使わないゾ》::%the player's uuid%} = true
#	# 本処理
#	drop 3 of (the drops of event-block)						# 合わせて通常の4倍量ドロップ
#	addRights(player, -1 * {@per job rights miner})
#	#remove {@per job rights miner} from {guild::jobRights::%the player's uuid%}	# 利権を削る
#	#send action bar "&l利権残り&r &a%{guild::jobRights::%the player's uuid%}%&r / 1000" to player
	breakWithRightsIfPossible(player, event-block, "miner", any pickaxe, 4, {@per job rights miner})

# 【関数】条件を満たしている場合に利権採掘を実施
# （引数）プレイヤー，壊そうとしているブロック，利権採掘に関わる職業ID，利権採掘で使用すべきツール，利権採掘成功時に採掘される量，利権採掘時に奪われる利権値
function breakWithRightsIfPossible(player: player, block: block, jobId: text, rightTool: object, dropFold: number, removedRights: number):
	set {_pid} to {_player}'s uuid
	# 条件チェック
	{_player}'s gamemode is survival
	{_player} has permission "sakuraft.%{jobId}%"
	{_player}'s tool is {_rightTool}
	{guild::jobRights::%{_pid}%} >= {_removedRights}
	{《v3からは使わないゾ》::%{_pid}%} = true
	# 本処理
	drop ({_dropFold} - 1) of (the drops of {_block} using {_player}'s tool) at {_block}
	addRights({_player}, -1 * {_removedRights})


# 左官がショベルで対象ブロックを掘った場合
on break of plastplast:
	# 条件チェック
	the player's gamemode is survival
	the player has permission "sakuraft.plasterwork"
	the player's tool is any pickaxe
	{guild::jobRights::%the player's uuid%} >= {@per job rights plasterwork}
	{《v3からは使わないゾ》::%the player's uuid%} = true
	# 本処理
	drop 2 of (the drops of event-block)						# 合わせて通常の3倍量ドロップ
	addRights(player, -1 * {@per job rights plasterwork})
	#remove {@per job rights plasterwork} from {guild::jobRights::%the player's uuid%}	# 利権を削る
	#send action bar "&l利権残り&r &a%{guild::jobRights::%the player's uuid%}%&r / 1000" to player










################################################################################
# (v3)仕事道具の生産
################################################################################

# 【関数】当サーバーでオリジナルの道具（のオブジェクト）を返します
# （補足）アイテムの名前など見た目部分の定義もここで実施。
# （引数）そのアイテムに割り当てられたID
# （返値）オリジナル道具のオブジェクト
function getSakuraftItem(itemId: text):: item:
	# 鉄のチェーンソー
	if {_itemId} = "iron_chainsaw":
		set {_item} to an iron axe																	# 基本となるアイテムを指定
		set the name of {_item} to "&6★ &a鉄のチェーンソー"
		set repair cost component of {_item} to 100									# (SkBee) 修理コストを爆上げしている
		delete repairable tag of {_item}														# (SkBee) 修理不能タグを付与している(機能してるかは不明)
		#force {_item} to glint																			# アイテムを強制的に光らせる
		set item model of {_item} to "minecraft:iron_axe"						# 見た目を決める起点となるファイルを指定
		set custom model data of {_item} to 1												# CMD数値
		set the line 1 of {_item}'s lore to "樵夫ギルド専用道具。"
		set the line 2 of {_item}'s lore to "原木を根こそぎ切り落とすことができる。"
		return {_item}



# 【イベント】工匠が砥石をShift+右クリックすると，特殊な生産画面を出す
on rightclick on grindstone:
	set {_player} to the player
	set {_pid} to the player's uuid
	# 条件チェック
	{guild::job::%{_pid}%} is "craftsman"
	{_player} is sneaking
	# 本処理
	cancel the event
	showTrade("manufactureWeaponForCraftsman", {_player})










################################################################################
# 特殊な交易
################################################################################

# 【関数】指定プレイヤーに交易画面を表示する
# （引数）表示させたい交易画面の種類，交易画面を表示するプレイヤー
# （注意）
# 　・関数内では，プレイヤーが交易画面を開く条件を満たしているかどうかはチェックしません。
# 　・交易を実施したときに利権値を減らす等の処理は
function showTrade(type: text, player: player):
	# ①コンクリートの簡易生成
	if {_type} is "powderToConcrete":
		set {_merchant} to new merchant named "簡易クラフト（コンクリート）"
		# 色ループを回して，全色のコンクリートパウダーをコンクリートにするレシピを追加
		loop any concrete:
			set {_c} to loop-value
			set {_r} to "64 %{_c}%" parsed as item
			set {_a} to "64 %{_c}% powder" parsed as item
			set {_b} to "water bucket" parsed as item
			add getMerchantRecipe({_r}, {_a}, {_b}) to merchant recipes of {_merchant}
		open merchant {_merchant} to {_player}
		set {guild::openedMerchantType::%{_player}'s uuid%} to "powderToConcrete"
	# ②土系ブロックの交易
	else if {_type} is "dirtToDirt":
		set {_rate} to 4
		if {_player} has permission "sakuraft.earthwork":
			set {_rate} to 3
		set {_merchant} to new merchant named "交易（土系ブロック）"
		# 次のリストにあるアイテム同士を相互交易できるように
		set {_tradeList::*} to dirt, gravel, sand and red sand
		loop {_tradeList::*}:
			loop {_tradeList::*}:
				if loop-value-1 = loop-value-2:
					continue
				add getMerchantRecipe(loop-value-1, "%{_rate}% %loop-value-2%" parsed as item) to merchant recipes of {_merchant}
		open merchant {_merchant} to {_player}
		set {guild::openedMerchantType::%{_player}'s uuid%} to "dirtToDirt"
	# ③工匠による仕事道具（武器系統）の生産
	else if {_type} is "manufactureWeaponForCraftsman":
		set {_merchant} to new merchant named "仕事道具（武器系統）の生産"
		# 次のアイテムを作成可能
		# 鉄の斧+9*レッドストーンダスト=鉄のチェーンソー
		set {_item} to getSakuraftItem("iron_chainsaw")
		add getMerchantRecipe({_item}, iron axe, 9 of redstone) to merchant recipes of {_merchant}
		open merchant {_merchant} to {_player}
		set {guild::openedMerchantType::%{_player}'s uuid%} to "manufactureWeaponForCraftsman"
	# IDがどれにも引っかからなかったとき
	else:
		message "%{@guild display name}% &4交易の種類を指定する引数が不正です。" to {_player}



# 【関数】ひとつの「商人との取引内容」オブジェクトを生成して返す
# （引数）得られるアイテム，差し出すアイテム①［，差し出すアイテム②］
function getMerchantRecipe(r: material, a: material, b: material = air):: merchant recipe:
	set {_trade} to new merchant recipe with result {_r} with max uses 100000
	if {_b} is air:
		set ingredients of merchant recipe {_trade} to {_a}
	else:
		set ingredients of merchant recipe {_trade} to {_a} and {_b}
	return {_trade}



# 取引成立時に既定の利権値を没収したりする。
# ・利権値が足りていなければ，イベントはキャンセルされる（交易不能）
# ・コンクリートの簡易生成については，ガラス瓶を返却してやる
on player purchase:
	set {_type} to {guild::openedMerchantType::%player's uuid%}
	set {_rights} to {guild::jobRights::%the player's uuid%}
	# 消費利権値の設定
	# ①コンクリートの簡易生成
	if {_type} is "powderToConcrete":
		set {_required} to {@per rights on marchant powder to concrete}
	# ③工匠による仕事道具（武器系統）の生産
	if {_type} is "manufactureWeaponForCraftsman":
		set {_required} to {@per rights on manufacture weapon}
	# ⑳その他
	else:
		set {_required} to 0
	# 利権値が足りない場合はイベント中止，そうでなければ利権値を減らす
	if {_rights} < {_required}:
		cancel the event
		exit
	addRights(player, -1 * {_required})
	# ガラス瓶の返却（①コンクリートの簡易生成）
	if {_type} is "powderToConcrete":
		give or drop a bucket to the player


# インベントリ（交易画面）を閉じたときには，開いている交易の種類を記録する変数を空にする
on inventory close:
	set {guild::openedMerchantType::%player's uuid%} to ""










################################################################################
# (v3)特殊な効果の発動
################################################################################

# 【イベント】樵夫が各種のチェーンソーで原木を切った場合にCutAllを発動する
# （引数）表示させたい交易画面の種類，交易画面を表示するプレイヤー
# （注意）
# 　・v2までにあった「Shiftを押している」「利権発動ON」の条件はなくなった
# 　・専用のアイテム（各種のチェーンソー）で切断する必要がある
on break of cutcut:
	set {_player} to the player
	set {_pid} to {_player}'s uuid
	# 条件チェック
	{_player}'s gamemode is survival															# サバイバルモードであること
	{guild::job::%{_pid}%} is "lumberjack"												# プレイヤーが樵夫であること
	isSakuraftItem({_player}'s tool, "チェーンソー") is true			# 道具が各種のチェーンソーであること
	{guild::jobRights::%{_pid}%} >= {@per job rights lumberjack}	# 利権値が足りていること
	# 本処理
	damage player's tool by 1			# 手持ちの道具にダメージを1与える
	set {_nokori} to (maximum durability of {_player}'s tool) - ({_player}'s tool's damage)
	# 斧の耐久値がゼロになっている場合...
	if {_nokori} < 1:
		remove player's tool from player	# 斧を破壊
	# 利権を削る
	addRights(player, -1 * {@per job rights lumberjack})
	#remove {@per job rights lumberjack} from {guild::jobRights::%the player's uuid%}	# 利権を削る
	#send action bar "&l利権残り&r &a%{guild::jobRights::%the player's uuid%}%&r / 1000" to player
	cutByLumberjack(event-location, {_player})


# 【関数】CutAll
function cutByLumberjack(loc: location, player: player):
	loop blocks in radius 2 around {_loc}:
		# 当該ブロックが原木だった場合...
		if loop-block is cutcut:
			break loop-block using {_player}'s tool		# 手持ちの斧（チェーンソー）で原木を切ったことにする
			wait 1 tick
			cutByLumberjack(loop-block, {_player})
			cutLeave(loop-block)


# 【関数】CutLeave
function cutLeave(loc: location):
	loop blocks in radius 4 around {_loc}:
		if loop-block is leaves:
			wait 1 tick
			set block at loop-block to air










################################################################################
# ユーティリティ
################################################################################

# ◇■◇利権値の増減◇■◇
function addRights(p: player, a: number):
	# 利権値をセットする。上限を超えたら上限値に調整，下限値を下回りそうなら下限値に調整
	set {_changed} to {guild::jobRights::%{_p}'s uuid%} + {_a}
	if {_changed} < 0:
		set {_changed} to 0
	if {_changed} > {@max job rights}:
		set {_changed} to {@max job rights}
	set {guild::jobRights::%{_p}'s uuid%} to {_changed}
	# ボスバーの作成
	set {_mjr} to {@max job rights}
	delete boss bar with id "rights_%{_p}'s uuid%"																				# skBee（前のは消す）
	set {_jobJp} to jobToJp({guild::job::%{_p}'s uuid%})
	set {_bossbar} to boss bar with id "rights_%{_p}'s uuid%" with title "【%{_jobJp}%】 利権値 %{_changed}% / %{_mjr}%" with color yellow		# skBee
	set bar style of {_bossbar} to segmented_20																					# skBee
	set bar progress of {_bossbar} to round({_changed} / {_mjr} * 100)															# skBee
	add {_p} to {_bossbar}																										# skBee
	# 5秒待つ
	wait 5 seconds
	# 現在の利権値と，記憶してた利権値が合っていれば，ボスバーを消す
	if {_changed} = {guild::jobRights::%{_p}'s uuid%}:
		delete boss bar with id "rights_%{_p}'s uuid%"	# skBee



# ◇■◇前回に仕事を変更した日を変更◇■◇
# 《引数》
#   p: 転職日を変更するプレイヤー名
#   a: 1970年1月1日を0とする転職日
# 《返り値》変更後の転職日を返す
function setLastJobChangeDay(p: offlineplayer, a: number):: number:
	set {_i} to {_p}'s uuid
	set {guild::lastJobChangeDay::%{_i}%} to {_a}
	#message "%{@guild display name}% %{_p}%の最終転職日を %{_a}% に設定しました。" to the player
	return {_a}



# ◇■◇利権値を変更◇■◇
# 《引数》
#   p: 利権値を変更するプレイヤー名
#   a: 利権値
#    ・最大値を上回る指定をすると，最大値を設定する
#    ・最小値（ゼロ）を下回る指定をすると，最小値（ゼロ）を設定する
# 《返り値》変更後の利権値を返す
function setRights(p: offlineplayer, a: number):: number:
	set {_i} to {_p}'s uuid
	if {_a} < 0:
		set {_a} to 0
	else if {_a} > {@max job rights}:
		set {_a} to {@max job rights}
	set {guild::jobRights::%{_i}%} to {_a}
	#message "%{@guild display name}% %{_p}%の利権値を %{_a}% に設定しました。" to the player
	return {_a}



# 【関数】即時に利権値を加算
# （詳細）負の値を指定すると，その絶対値ぶんだけ減算する
# （引数）
#   p: 利権値を加算するプレイヤー名
#   a: 加算したい利権値
#    ・負の値を指定すると，その絶対値ぶんだけ減算する
# （返値）変更後の利権値を返す
function addRightsOnBackground(p: offlineplayer, a: number):: number:
	set {_i} to {_p}'s uuid
	set {_rightsBefore} to {guild::jobRights::%{_i}%}
	return setRights({_p}, {_rightsBefore} + {_a})







# 【関数】職業IDから職業日本語名を返す
function jobToJp(id: text):: text:
	if {_id} is "lumberjack":
		set {_result} to "樵夫"
	else if {_id} is "craftsman":
		set {_result} to "工匠"
	else if {_id} is "earthwork":		# もはや必要ないが，念のため維持
		set {_result} to "土工"
	else if {_id} is "miner":
		set {_result} to "坑夫"
	else if {_id} is "plasterwork":
		set {_result} to "左官"
	else:
		set {_result} to "無職"
	return {_result}



# 【関数】当サーバーでオリジナルの道具であるかどうかの正誤を返します
# （詳細）オリジナルアイテムの名称には，必ず「黄色の★」「アイテム名はライム色」なので，そこで判定している
# （引数）判定したいアイテム，接尾辞（アイテムの最後の文字列）
# （返値）オリジナルアイテムであると判定した場合にはtrueを返す
function isSakuraftItem(item: material, suffix: text):: boolean:
	set {_name} to {_item}'s name
	if {_name} doesn't start with "&6★ &a":
		return false
	if {_name} doesn't end with {_suffix}:
		return false
	return true



# 【関数】旧データを新データに移行
# （補足）
# 　・v1 -> v2: リスト(連想配列)の記述方法を，Skript新方式に変更。
# 　・v2 -> v3:
# 　　・全てのリスト変数を，{guild::*}内に収めるようにした。
# 　　・利権使用スイッチを削除（試験の使用有無は，専用アイテムを使用するかどうかによって制御するようにしたため）
# 　　・職業が「土工」であった場合のみ，無職にする（職業「土工」は削除されたため）
function transPlayerJobData(player: offlineplayer):
	set {_pid} to {_player}'s uuid
	# v1 -> v2
	# ・転職日の移行。
	if {lastJobChangeDay.%{_player}%} is set:
		set {lastJobChangeDay::%{_pid}%} to {lastJobChangeDay.%{_player}%}
		delete {lastJobChangeDay.%{_player}%}
		message "%{@guild display name}% &e変数(v1)「最終転職日」を，新変数(v2)に移行しました。" to {_player}
	# ・利権値の移行。
	if {jobRights.%{_player}%} is set:
		set {jobRights::%{_pid}%} to {jobRights.%{_player}%} * 100
		delete {jobRights.%{_player}%}
		message "%{@guild display name}% &e変数(v1)「利権値」を，新変数(v2)に移行しました。" to {_player}
	# ・利権使用スイッチの移行。
	if {jobValid.%{_player}%} is set:
		set {jobValid::%{_pid}%} to {jobValid.%{_player}%}
		delete {jobValid.%{_player}%}
		message "%{@guild display name}% &e変数(v1)「利権有効化スイッチ」を，新変数(v2)に移行しました。" to {_player}
	# ・職業の移行。
	if {job.%{_player}%} is set:
		set {job::%{_pid}%} to {job.%{_player}%}
		delete {job.%{_player}%}
		message "%{@guild display name}% &e変数(v1)「職業」を，新変数(v2)に移行しました。" to {_player}
	# ・最終ログイン日の移行。
	if {lastLogInDayG.%{_player}%} is set:
		set {lastLogInDayG::%{_pid}%} to {lastLogInDayG.%{_player}%}
		delete {lastLogInDayG.%{_player}%}
	# v2 -> v3
	# ・転職日の移行。
	if {lastJobChangeDay::%{_player}%} is set:
		set {guild::lastJobChangeDay::%{_pid}%} to {lastJobChangeDay::%{_pid}%}
		delete {lastJobChangeDay::%{_pid}%}
		message "%{@guild display name}% &e変数(v2)「最終転職日」を，新変数(v3)に移行しました。" to {_player}
	# ・利権値の移行。
	if {jobRights::%{_pid}%} is set:
		set {guild::jobRights::%{_pid}%} to {jobRights::%{_pid}%} * 100
		delete {jobRights::%{_pid}%}
		message "%{@guild display name}% &e変数(v2)「利権値」を，新変数(v3)に移行しました。" to {_player}
	# ・利権使用スイッチの削除。
	if {jobValid::%{_pid}%} is set:
		delete {jobValid::%{_pid}%}
		message "%{@guild display name}% &e変数(v2)「利権有効化スイッチ」を削除しました。" to {_player}
	# ・職業の移行。
	if {job::%{_pid}%} is set:
		set {guild::job::%{_pid}%} to {job::%{_pid}%}
		delete {job::%{_pid}%}
		message "%{@guild display name}% &e変数(v2)「職業」を，新変数(v3)に移行しました。" to {_player}
	# ・最終ログイン日の移行。
	if {lastLogInDayG::%{_pid}%} is set:
		set {guild::lastLogInDay::%{_pid}%} to {lastLogInDayG::%{_pid}%}
		delete {lastLogInDayG::%{_pid}%}
	# ・職業「土工」の失職処置
	if {guild::job::%{_pid}%} = "earthwork":
		setJob({_player}, "unemployed")
		message "%{@guild display name}% &4&lあなたは職業「土工」を失職しました。" to {_player}
		message " このたび，土工ギルドが解散されたことに伴う処置となります。" to {_player}
		message " お手数ですが，改めて別の職業へ就くようお願い致します。" to {_player}



# 【イベント】ログイン時処理
# （詳細）
# 　・利権値の補充を行います。
on join:
	# 旧データを新データに移行
	transPlayerJobData(player)
	# 本日を求める
	set {_today} to floor(unix timestamp of now / 86400)
	# もし，ログインプレイヤーの最終ログイン日の記録がなかった場合は，本日の日付を記録する。
	if {guild::lastLogInDay::%the player's uuid%} is not set:
		set {guild::lastLogInDay::%the player's uuid%} to {_today}
	# 最終ログイン日と本日との日数差を求める
	set {_diff} to {_today} - {guild::lastLogInDay::%the player's uuid%}
	# 本日の日付を記録する。
	set {guild::lastLogInDay::%the player's uuid%} to {_today}
	# 日数差が1日以上あり，かつプレイヤーが給付上限利権値を持たない場合，利権値を給付
	if {_diff} >= 1:
		{guild::jobRights::%the player's uuid%} <= {@max job rights}
		set {_sum days} to min({_diff}, {@days max G})									# 何日分の給付を行うか，その日数を求める
		set {_handout max} to {@max job rights} - {guild::jobRights::%the player's uuid%}		# 給付上限プレイヤーの現利権値を求める
		set {_sum handout} to min({_sum days} * {@job rights on day}, {_handout max}) 	# 給付利権値の最大値を求める
		add {_sum handout} to {guild::jobRights::%the player's uuid%}							# 給付実施
		addRights(player, {_sum handout})
		message "%{@guild display name}% 利権値を &a%{_sum handout}%&r 給付しました。" to player
	addRights(player, 0)	# 起動時は利権値を見せる










################################################################################
# 1.21.4実装
################################################################################

# 2025/06/09 SAKURAさんと話して次のように改良することとする。
# ◇3x3x1掘削のエンチャント本ではなく，すでに3x3x1のエンチャントがついた状態のアイテムをアドミンショップで販売する形式とする。
# ◎エンチャントは，現状のように「1000マス限定」ではなく，永続的なものに変更する。
# ◎3x3x1掘削では，ツルハシで掘るのに適切なブロックのみが壊されるようにし，たとえば土など，ツルハシで掘るのに適さないようなブロックはそもそも壊されないように改良。
# 修繕エンチャントは（事実上）つかないようにする。
# 掘削する場合には，一定の利権値が減少していく（1ブロックあたりで減らす）。ただし坑夫のみ利権値減少なし。
# 坑夫は，4倍量採掘能力と併用することが可能。
# 耐久値は，1ブロックで1減るのではなく，1掘削で1減るものとする。

# オリジナルのアイテムを与える
command /getspecialitem <number>:
	trigger:
		# 条件チェック
		set {_player} to the player
		{_player} is an operator			# コマンドの実行者がOP権限者であること
		# 本処理
		wait a tick
		if arg-1 = 0:
		#	set {_book} to an enchanted_book with lore "&3広域破砕3x3:1000"
		#	give {_book} to the player
		else if arg-1 = 1:
			set {_pickaxe} to an iron pickaxe with lore "&3★広域破砕3x3"
			set repair cost component of {_pickaxe} to 100		# (SkBee) ツルハシの修理コストを爆上げしている
			delete repairable tag of player's tool						# (SkBee) ツルハシの修理不能タグを付与している(機能してるかは不明)
			force {_pickaxe} to glint													# アイテムを強制的に光らせる
			set the name of {_pickaxe} to "&r岩融"
			set item model of {_pickaxe} to "kasumin:iron_pickaxe"
			set custom model data of {_pickaxe} to 1
			set the line 2 of {_pickaxe}'s lore to "武蔵坊弁慶が振るっていた薙刀。「いわとおし」と読む。"
			set the line 3 of {_pickaxe}'s lore to "坑夫特効ブロックを3x3の広範囲にわたって破砕する。"
			give {_pickaxe} to the player
		else if arg-1 = 2:
			set {_item}  to getSakuraftItem("iron_chainsaw")
			give {_item} to the player



# オリジナルのエンチャントを金床でつけられるようにする
#on anvil prepare:
#	# 条件チェック
#	the slot 0 of the event-inventory is any pickaxe
#	the slot 1 of the event-inventory is an enchanted_book
#	set {_lore} to the line 1 of the slot 1 of the event-inventory's lore
#	{_lore} starts with "&3広域破砕3x3:"
#	# 本処理
#	wait a tick	# 休憩をはさまないと以下のコードがうまく作動しない
#	set {_item} to the slot 0 of the event-inventory
#	force {_item} to start glint
#	set the slot 2 of the event-inventory to {_item} with lore {_lore}



# 下の「3x3掘削」を実現するために，ブロックを殴り始めた瞬間に，その殴った面（上下東西南北）を記録
on leftclick:
	# 条件チェックなし
	# 本処理
	set {_pid} to the player's uuid
	set {guild::latestPunchedDirection::%{_pid}%} to the event-direction



# オリジナルエンチャントのついたツールで破砕する場合
on break:
	# 条件チェック
	# ？破砕に使ったツールに，オリジナルのエンチャント「広域破砕」がついている
	set {_lore} to the line 1 of the player's tool's lore
	{_lore} starts with "&3★広域破砕3x3"
	# 本処理
	cancel the event
	# エンチャントのチャージ数を数える
	#set {_rest} to getRemainingAmountFromOriginalEnchantment({_lore},"&3広域破砕3x3")
	# 掘削したブロックを中心に，3x3x1の9ブロックを配列として取得
	set {_x} to the event-block's x-loc
	set {_y} to the event-block's y-loc
	set {_z} to the event-block's z-loc
	set {_pid} to the player's uuid
	if {guild::latestPunchedDirection::%{_pid}%} is above or below:
		set {_breaking::*} to the blocks within location({_x}-1,{_y},{_z}-1, event-world) and location({_x}+1,{_y},{_z}+1, event-world)
	else if {guild::latestPunchedDirection::%{_pid}%} is east or west:
		set {_breaking::*} to the blocks within location({_x},{_y}-1,{_z}-1, event-world) and location({_x},{_y}+1,{_z}+1, event-world)
	else if {guild::latestPunchedDirection::%{_pid}%} is south or north:
		set {_breaking::*} to the blocks within location({_x}-1,{_y}-1,{_z}, event-world) and location({_x}+1,{_y}+1,{_z}, event-world)
	delete {guild::latestPunchedDirection::%{_pid}%}
	# 配列のそれぞれのブロックについて，
	# 坑夫特効ブロック（minemine）ならば，壊す。利権も使用可能。坑夫以外は利権値が1減る
	# ピッケルで掘る土工特効ブロック（digdigpick）ならば，ただ壊す。坑夫以外は利権値が1減る
	loop {_breaking::*}:
		if loop-value is minemine:
			break loop-value using player's tool
			breakWithRightsIfPossible(player, event-block, "miner", any pickaxe, 4, {@per job rights miner})
			addRights({_player}, -1 * 1) if the player doesn't have permission "sakuraft.miner"
		else if loop-value is digdigpick:
			break loop-value using player's tool
			addRights({_player}, -1 * 1) if the player doesn't have permission "sakuraft.miner"
		#remove 1 from {_rest}
	# ツールの耐久値は1のみ減らす。もし耐久値が0以下ならばツールをぶち壊す
	remove 1 from the durability of the player's tool
	if the durability of the player's tool <= 0:
		delete the player's tool
		play sound "entity.item.break" with volume 0.8 for the player
	# オリジナルエンチャントに書いてあるチャージカウントを書き換える。
	# 0以下の場合はエンチャント名（コメント）を消す。
	#set the line 1 of the player's tool's lore to concat("&3広域破砕3x3:",{_rest})
	#if {_rest} <= 0:
	#	delete the line 1 of the player's tool's lore


# オリジナルエンチャントからチャージ数を得る
#function getRemainingAmountFromOriginalEnchantment(lore: text, ench: text):: number:
#	set {_loreLength} to length of {_lore}
#	set {_enchLength} to length of {_ench}
#	set {_part} to substring of {_lore} from ({_enchLength} + 1) to ({_loreLength})
#	return {_part} parsed as number



# 【イベント】オリジナルの（＝Loreに★のついている）エンチャントがある場合は他エンチャントをつけられなくする
# （補足）
# 　・とくに「修繕」「耐久力」を封じたい
# 　・公式のエンチャントを付与すると，想定外のバグが起きるかもしれないので。
on enchant prepare:
	# 条件チェック
	# ツールに，オリジナルのエンチャントがついている
	set {_item} to the enchanted item
	set {_lore} to the line 1 of {_item}'s lore
	{_lore} starts with "&3★"
	cancel the event



# 【イベント】オリジナルの（＝Loreに★のついている）エンチャントがある場合は金床使用不能
# （補足）
# 　・とくに「修繕」「耐久力」を封じたい
# 　・公式のエンチャントを付与すると，想定外のバグが起きるかもしれないので。
on skbee anvil prepare:
	# 条件チェック
	# ツールに，オリジナルのエンチャントがついている
	set {_item} to the slot 0 of event-inventory
	set {_lore} to the line 1 of {_item}'s lore
	{_lore} starts with "&3★"
	set event-slot to air

